/*
 * 1. 연산자
 * 		1) 연산자의 종류
 * 			= 단항연산자
 * 				= ***증감연산자 (++ , --)
 * 				= ***부정연산자 (!)
 * 				= 부호연산자 (+ , -)
 * 				= ***형변환연산자((type))
 * 					type ==> byte, int, char, double, float...
 * 					=> 데이터형을 변경해서 연산처리가 가능하게 만든다. (*연산: 데이터형이 동일)
 * 			= 이항연산자
 * 				= ***산술연산자 (+ , - , * , / , % )=> 형변환
 * 						/ ==> 0으로 나눌 수 없다. , 정수/정수= 정수
 * 						% ==> 나머지 (배수)
 * 							==> 5%2 (1)
 * 							==> 5%-2 (1)
 *  						==> -5%2 (-1)
 *  						==> -5%-2 (-1) ==> 왼쪽의 부호를 따라감
 * 				= 비트연산자 ( & , | , ^ )
 * 				= 쉬프트연산자 ( << , >> )
 * 				= ***비교연산자 ( == , != , < , > , <= , >= )
 * 				= ***논리연산자( && , || )
 * 				= ***대입연산자( =, +=, -= , ...)
 * 			= 삼항연산자
 * 				= 조건 ? 값1:값2
 * 					==> 조건: true ==> 값1
 * 					==> 조건: false ==> 값2
 * 		2) 연산방법
 * 			단항연산자
 * 				= 증감연산자  ==>> 반본문을 사용, 게임로직
 * 					++ : 무조건 한개를 증가한다
 * 					-- : 무조건 한개를 감소한다
 * 						=> 사용법
 * 						int a =10; 변수선언
 * 						==> ++a(--a) : 전치연산자 : 증가한 다음에 대입
 * 						==> a++(a--) : 후치연산자 : 대입을 먼저 하고 나중에 증가
 * 						ex) for(int i=1; i<=10; i++)
 * 				= 부정연산자 (ture=>false, false=>true) ==> !
 * 				===== 반드시 boolean을 사용한다
 * 					ex) boolean bCheck=false;
 * 						!bCheck
 * 						==> system.out.println(bCheck);
 * 		3) 연산자 우선순위  
 */
public class 단항연산자_증감연산자 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		
		// 전치연산
		int a=10;
		int b=++a;
		System.out.println("a="+a+",b="+b);
		
		// 후치연산
		a=10;
		b=a++;
		System.out.println("a="+a+",b="+b);
		
		a=10;
		//b=++a + ++a + ++a + ++a;
		b=a++ + a++ + a++ + a++;
		System.out.println("a="+a+",b="+b);
		
				
	}

}
